%% function Fig_1I
clear
close all
clc

format short
addpath 'helper_functions'

%% 1. Specify folder paths and load the structs
parent_dir = fullfile(pwd);
abs_path = fullfile(parent_dir, 'data_structures');



all_fish = load(fullfile(abs_path, 'data_clean_head.mat'), 'all_fish').all_fish;
fishNames = {'Hope', 'Len', 'Doris', 'Finn', 'Ruby'}; 
num_fish = 1;%length(fishNames);
num_body_pts = 1;

colorMap = [253,212,158
            253,187,132
            252,141,89
            227,74,51
            179,0,0]/255;
res = load(fullfile(abs_path, 'result_head_variances.mat'));
res = res.res;

for field_to_plot = 'X'
    field_name = ['var', field_to_plot, '_mean'];

    figure('Color','white')
    set(gca,'LineWidth',1.5,'fontsize',14)
    hold on

    % Get the mean of all
    all_lux = [];
    all_data_pts = [];
    all_data_pts_processed_1 = [];
    all_data_pts_processed_2 = [];
    for i = 1 : num_fish
        this_data = res(i).varX_mean;
        all_data_pts = [all_data_pts; this_data];
        
        data_tmp = res(i).luminance;
        for j = 1:length(data_tmp)
            tmp = data_tmp(j).varX;
            mean_tmp(j) = mean(tmp)*1e4;
            sem_tmp(j) = std(tmp)/sqrt(length(tmp)-1)*1e4;
        end
    end

    mean_value_all = mean(all_data_pts);

    for i = 1 : num_fish
        fish_name = fishNames{i};
        lux{i} = res(i).lux;
        data = res(i).(field_name);

        %% colorMap_indiv = summer(size(lux, 2) + 4);
        mean_value_this = mean(data);

        %% Centered, then smoothed for x-variance values
        data_smoothed_centered{i} = smooth(data - 0*(mean_value_this - 1*mean_value_all),3) * 1e4;
        

 
            all_lux = [all_lux, lux{i}];
            all_data_pts_processed_1 = [all_data_pts_processed_1; data_smoothed_centered{i}];
           
            
      
    end

%% 4. Fit a sigmoid model
    X1 = log10(all_lux);
    Y1 = all_data_pts_processed_1;
    X1 = X1(:);
    Y1 = Y1(:);



    [fitresult1, gof1] = createSigmoidFit(field_name, X1, Y1);



    num_points = 500;
    x_in = linspace(min(X1), max(X1), num_points);

    % Evaluate the fitted model at the sample points
    y_in = feval(fitresult1, x_in);

    pi = predint(fitresult1,x_in,0.95,'functional','on');
    % pi = predint(fitted_model,x_in,0.95,'observation','on');
    xx = [x_in,fliplr(x_in)];
    yy = [pi(:,1);flipud(pi(:,2))]';

    xx2 = [lux{i},fliplr(lux{i})];
    y1 = data_smoothed_centered{i} + smooth(sem_tmp,3);
    y2 = data_smoothed_centered{i} - smooth(sem_tmp,3);
    yy2 = [y1(:);flipud(y2(:))]';
    h(2) = fill(xx2,yy2,0.5*[1 2 1],'EdgeColor','none','FaceAlpha',0.5);

    
    for i = 1 : num_fish
        h (2+i) = scatter((lux{i}), (data_smoothed_centered{i}),80,[34, 139, 34]/255,'filled','MarkerFaceAlpha',0.9);
    % plot(lux{i},data_unsmoothed_centered{i})
    end
    h(1) = plot(10.^(x_in), y_in, '-.','Color', [34, 139, 34]/255, 'LineWidth', 2);
    xlabel('Illumination, lx')
    ylabel('Fish Fore-aft Movement Variances (cm^2)')
    set(gca,'Xscale','log')
    xlim([0.08 280])
    
    lux_ticks = [0.1, 1, 10, 100];
    xticks(lux_ticks);
    xticklabels(lux_ticks);
    % legend(h,{'sigmoidal fit','95% PI','fish 1','fish 1','fish 1','fish 1','fish 1'},'Location','northeast','edgecolor','none','fontsize',16)
    

% set(gca,'Position', 'centimeters')
pos = get(gca,'Position');
height_cm = pos(4);
desired_length = 0.015; %cm
normalized_length = desired_length./height_cm;
set(gca,'TickLength', [normalized_length, 0.01],'TickDir','in')
ylim([0 3])
ipt = findchangepts(y_in,'MaxNumChanges',2,'Statistic','mean');
% for i = 1:length(ipt)
%     plot(10^x_in(ipt(i))*ones(1,10),linspace(-0.5,2.5,10),'-','color',0.3*[1 1 1],'linewidth',1)
% end

% [10^x_in(ipt(1)),10^x_in(ipt(2))]



end


function [fitresult, gof] = createSigmoidFit(field_name, x, y)
%  Auto-generated by MATLAB on 12-Mar-2024 15:48:24

[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( 'a/(1+exp(-b*(x-c)))+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';

if (field_name == "varX_mean")
    opts.StartPoint = [0.473288848902729 0.351659507062997 0.830828627896291 0.585264091152724];
elseif (field_name == "varY_mean")
    opts.StartPoint = [0.0357116785741896 0.849129305868777 0.933993247757551 0.678735154857773];
end

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

end
